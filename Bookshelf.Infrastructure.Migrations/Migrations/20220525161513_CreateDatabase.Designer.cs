// <auto-generated />
using System;
using Bookshelf.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookshelf.Infrastructure.Migrations.Migrations
{
    [DbContext(typeof(BookshelfDbContext))]
    [Migration("20220525161513_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bookshelf.Infrastructure.Persistence.Entities.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Bookshelf.Infrastructure.Persistence.Entities.BookAdvertEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BookAdverts");
                });

            modelBuilder.Entity("Bookshelf.Infrastructure.Persistence.Entities.BookshelfUserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bookshelf.Infrastructure.Persistence.Entities.PhotoLinkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BookAdvertEntityId")
                        .HasColumnType("int");

                    b.Property<int>("BookAdvertId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BookAdvertEntityId");

                    b.ToTable("PhotoLinks");
                });

            modelBuilder.Entity("Bookshelf.Infrastructure.Persistence.Entities.BookshelfUserEntity", b =>
                {
                    b.HasOne("Bookshelf.Infrastructure.Persistence.Entities.AddressEntity", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Bookshelf.Infrastructure.Persistence.Entities.PhotoLinkEntity", b =>
                {
                    b.HasOne("Bookshelf.Infrastructure.Persistence.Entities.BookAdvertEntity", null)
                        .WithMany("PhotoLinks")
                        .HasForeignKey("BookAdvertEntityId");
                });

            modelBuilder.Entity("Bookshelf.Infrastructure.Persistence.Entities.BookAdvertEntity", b =>
                {
                    b.Navigation("PhotoLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
